public class Deck
{
  Card[] cards;
	
  // the default constructor (no arguments) creates a populated 52-card deck
  public Deck () {
    int index = 0;
    cards = new Card [52];
    for (int suit = 0; suit < 4; suit++) {
      for (int rank = 1; rank <= 13; rank++) {
	cards[index] = new Card (suit, rank);  index++;
      }
    }
  }

  // the other constructor only creates the array;
  // it doesn't create any cards
  public Deck (int length) {
    cards = new Card [length];
  }
	
  // Since printDeck is an object method now, I am just calling it "print".
  // I've done the same with sort and shuffle.
  public void print () {
    for (int i=0; i<cards.length; i++) {
      System.out.println (cards[i]);
    }
  }
	
  public void swapCards (int i, int j) {
    Card temp = cards[i];  cards[i] = cards[j];  cards[j] = temp;
  }
	
  // randInt: returns a random integer [low, high]  (including low and  high)
  public static int randInt (int low, int high) {
    double x = Math.random() * (high - low + 1);
    return (int) x + low;
  }

	
  // this is the shuffle algorithm we implemented last week
  public void shuffle () {
    for (int i=0; i<cards.length; i++) {
      int j = randInt (i, cards.length-1);
      swapCards (i, j);
    }
  }
	
	
  public static void main (String[] args) {
    // create a new Deck and shuffle it;
    // notice that shuffle is a modifier method
    Deck d = new Deck ();
    d.shuffle ();

  }
}
